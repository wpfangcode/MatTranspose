#include <iostream>

using namespace std;

class Matrix{
public:
    Matrix(){
        MAT = NULL;
    }
    void setSize(int row,int col){
        this->row=row;
        this->col=col;
        // delete []MAT;
        MAT=new int* [row];
        for(int i=0;i<row;i++){
            MAT[i]=new int[col];
        }
    }
    void set(int row, int col,int data){
        MAT[row][col]=data;
    }
    void show(){
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                cout<<MAT[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    void transpose(){
        unsigned int newCol=row;
        unsigned int newRow=col;
        int **temp=new int*[newRow];
        for(int i=0;i<newRow;i++){
            temp[i]=new int[newCol];
        }
        for(int i=0;i<newRow;i++){
            for(int j=0;j<newCol;j++){
                temp[i][j]=MAT[j][i];
            }
        }
        for(int i=0;i<row;i++){
            delete[] MAT[i];
        }
        delete[] MAT;
        row = newRow;
        col = newCol;
        MAT=new int* [row];
        for(int i=0;i<row;i++){
            MAT[i]=new int[col];
        }
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                MAT[i][j]=temp[i][j];
            }
        }
        for(int i=0;i<row;i++){
            delete[] temp[i];
        }
        delete []temp;
    }
private:
    unsigned int row;
    unsigned int col;
    int **MAT;
};

int main()
{
    Matrix *mat=new Matrix();
    mat->setSize(3,2);
	mat->set(0, 0, 0);
	mat->set(0, 1, 0);
	mat->set(1, 0, 7);
	mat->set(1, 1, 8);
	mat->set(2, 0, 0);
	mat->set(2, 1, 0);
    mat->show();
    mat->transpose();
    mat->show();
}
