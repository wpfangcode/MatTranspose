#include <iostream>
using namespace std;
class MAT
{
    int col;
    int row;
    int** cell;
public:
    void setSize(int r, int c)
    {
        col = c;
        row = r;
        cell = new int* [row];
        for (int i = 0; i < row; i++)
            cell[i] = new int[col];

    }
    void set(int x, int y, int val)
    {
        cell[x][y] = val;
    }
    void show()
    {
        int i, j;
        for (i = 0; i < row; i++)
        {
            for (j = 0; j < col; j++)
                cout << cell[i][j] << "\t";
            cout << endl;
        }
    }
    void transposeshow()
    {
        int i, j;
        for (j = 0; j < col; j++)
        {
            for (i = 0; i < row; i++)
                cout << cell[i][j] << "\t";
            cout << endl;
        }
    }
    void free()
    {

        int i;
        for (i = 0; i < row; i++)
            delete[] cell[i];
        delete[] cell;
        cell = 0;
        col = 0;
        row = 0;
    }
    void transpose()
    {
        int** Tcell;
        int t;
        Tcell = new int* [col];
        for (int i = 0; i < col; i++)
            Tcell[i] = new int[row];//-----新指標創成
        for (int i = 0; i < row; i++)
        {
            for (int j = 0; j < col; j++)
                Tcell[j][i] = cell[i][j];
        }
        for (int i = 0; i < row; i++)
        delete[]cell[i];
        delete[]cell;
        cell = Tcell;//---------清除所有cell
        t = row;
        row = col;
        col = t;//-----------將x,y設為倒置後的值
    }
};
class App
{
public:
    void run()
    {
        MAT A;
        A.setSize(3, 2);
        A.set(0, 0, 5);
        A.set(0, 1, 9);
        A.set(1, 0, 6);
        A.set(1, 1, 8);
        A.set(2, 0, 7);
        A.set(2, 1, 11);
        A.show();
        cout << "-----------------" << endl;
        A.transpose();
        A.show();
        A.free();
    }
};


int main()
{
    App app;
    app.run();
}
