

#include <iostream>
using namespace std;
class MAT
{
	int col;
	int row;
	int **cell;
public:
	void setSize(int r, int c)
	{
		col = c;
		row = r;
		cell = new int*[row];
		for (int i = 0; i < row; i++)
			cell[i] = new int[col];
				
	}
	void set(int x, int y, int val)
	{
		cell[x][y] = val;
	}
	void show()
	{
		int i, j;
		for (i = 0; i < row; i++)
		{
			for (j = 0; j < col; j++)
				cout << cell[i][j] << "\t";
			cout << endl;
		}
	}
	void transposeshow()
	{
		int i, j;
		for (j = 0; j < col; j++)
		{
			for (i = 0; i < row; i++)
				cout << cell[i][j] << "\t";
			cout << endl;
		}
	}
	void free()
	{

		int i;
		for (i = 0; i < row; i++)
			delete[] cell[i];
		delete[] cell;
		cell = 0;
		col = 0;
		row = 0;
	}
	void transpose()//(3,2)轉置後(2,3) 2*3(r*c)
	{
		int r = row;//r=3
		int c = col;//c=2

		int** cell2;
		cell2 = new int* [col];
		for (int i = 0; i < col; i++)
			cell2[i] = new int[row];//設一個反矩陣

		for (int x = 0; x < col; x++)//col=2 
		{
			for (int y = 0; y < row; y++)//row=3
			{
				cell2[x][y] = cell[y][x];//傳入對應的值
			}
		}

		free();//刪除cell

		setSize(c, r);//重新創造一個cell c=2 r=3   //row=2 col=3

		for (int x = 0; x < row; x++)
		{
			for (int y = 0; y < col; y++)
				cell[x][y] = cell2[x][y];
		}
	}
};
class App
{
public:
	void run()
	{
		MAT A;
		A.setSize(3, 2);
		A.set(0, 0, 5);
		A.set(0, 1, 9);
		A.set(1, 0, 6);
		A.set(1, 1, 8);
		A.set(2, 0, 7);
		A.set(2, 1, 11);
		A.show();
		cout << "-----------------" << endl;
		A.transpose();
                A.show();
		A.free();
	}
};


int main()
{
	App app;
	app.run();
}

