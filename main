#include <iostream>
using namespace std;
class MAT
{
	int col;
	int row;
	int** cell;
	int** tcell;
public:
	void setSize(int r, int c)
	{
		col = c;
		row = r;
		cell = new int* [row];
		for (int i = 0; i < row; i++)
			cell[i] = new int[col];

	}
	void set(int x, int y, int val)
	{
		cell[x][y] = val;
	}
	void show()
	{
		int i, j;
		cout << col <<"\t" << row << endl;
		for (i = 0; i < row; i++)
		{
			for (j = 0; j < col; j++)
				cout << cell[i][j] << "\t";
			cout << endl;
		}
		cout << endl;
	}
	void transposeshow()
	{
		int i, j;
		for (j = 0; j < col; j++)
		{
			for (i = 0; i < row; i++)
			
				cout << cell[i][j] << "\t";
			cout << endl;
		}
		cout << endl;
	}
	void free()
	{

		int i;
		for (i = 0; i < row; i++)
			delete[] cell[i];
		delete[] cell;
		cell = 0;
		col = 0;
		row = 0;
	}
	void transpose()
	{
		/*
		* -------------
		cout << "*";
		cout << endl;
		tceel should be declare if not 
		will come out undifine output;

		*/

		//--- this is part 2 and 3
		// ---------cout << tcell[y][x] << "\t" + cout << endl;

		int temp=0;
		tcell = new int* [col];
		for (int i = 0; i < row; i++)
			tcell[i] = new int[row];
		for (int x = 0; x < col; ++x)
		{
			for (int y = 0; y < row; ++y)
			{
				tcell[y][x] = 0; //important
				tcell[y][x] = cell[y][x];		
			}
		}

		//--- this is part 4 --------free the memory
		for (int i = 0; i < row; i++)
			delete[] cell[i];
		delete[] cell;

		//---- this is part 5
		setSize(col, row);
		for (int x = 0; x < row; ++x)
		{
			for (int y = 0; y < col; ++y)
			{
				cell[x][y] = 0;
				cell[x][y] = tcell[y][x];
			}
		}
		/// <summary>
		/// ----------cout << col << raw
		/// this will auto swap if you change col and row, use normally dont change it!!!;
		/// it's important to show your size
		/// then remember you ALREADY HAVE A BRAND NEW CELL[][],dont declare again
		/// 
		/// </summary>
		/// 

	}
};
class App
{
public:
	void run()
	{
		MAT A;
		A.setSize(3, 2);
		A.set(0, 0, 5);
		A.set(0, 1, 9);
		A.set(1, 0, 6);
		A.set(1, 1, 8);
		A.set(2, 0, 7);
		A.set(2, 1, 11);
		A.show();
		A.transposeshow();
		cout << "-----------------" << endl;
		A.transpose();
		A.show();
		A.free();
	}
};


int main()
{
	App app;
	app.run();
	return 0;
}
