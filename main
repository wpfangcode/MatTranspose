#include <iostream>
using namespace std;
class MAT
{
	int height;
	int width;
	int **cell;
public:
	void setSize(int h, int w)
	{
		height = h;
		width = w;
		cell = new int*[height];
		for (int i = 0; i < height; i++)
			cell[i] = new int[width];
	}
	void set(int x, int y, int val)
	{
		cell[x][y] = val;
	}
	void show()
	{
		int i, j;
		for (i = 0; i < height; i++)
		{
			for (j = 0; j < width; j++)
				cout << cell[i][j] << "\t";
			cout << endl;
		}
	}
	void transposeshow()
	{
		int i, j;
		for (j = 0; j < width; j++)
		{
			for (i = 0; i < height; i++)
				cout << cell[i][j] << "\t";
			cout << endl;
		}
	}
	void free()
	{
		int i;
		for (i = 0; i < height; i++)
			delete[] cell[i];
		delete[] cell;
		cell = 0;
		height = 0;
		width = 0;
	}
	void transpose()
	{
		int **mat_flip;
		mat_flip=new int*[width];
		for(int i=0;i<width;i++){
			mat_flip[i]=new int[height];
		}//宣告相反大小的陣列 ex:3x2->2x3 
		
		for(int i=0;i<height;i++){
			for(int j=0;j<width;j++){
				mat_flip[j][i]=cell[i][j];
			}
		}//複製值 
		
		for(int i=0;i<height;i++){
			delete [] cell[i];
		}
		delete [] cell;
		//釋放空間 
		
		cell = mat_flip;
		
		int temp=height;
		height=width;
		width=temp;
		//高寬互換 
	}
};
class App
{
public:
	void run()
	{
		MAT A;
		A.setSize(3, 2);
		A.set(0, 0, 5);
		A.set(0, 1, 9);
		A.set(1, 0, 6);
		A.set(1, 1, 8);
		A.set(2, 0, 7);
		A.set(2, 1, 11);
		A.show();
		cout << "-----------------" << endl;
		A.transpose();
		A.show();
		A.free();
	}
};


int main()
{
	App app;
	app.run();
}
